openapi: 3.0.0
info:
  version: "1.0.0"
  title: AccuMed OpenAPI
  contact:
    email: info@accumedintel.com
tags:
  - name: Package
  - name: Request
  - name: Organization
  - name: User
  - name: Patient
paths:
  /package:
    get:
      tags:
      - Package
      summary: Get all packages
      operationId: getPackage
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  Packages:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Package'
                        - $ref: '#/components/schemas/Link'
                  _links:
                    $ref: '#/components/schemas/PageLink'
                  _meta:
                    $ref: '#/components/schemas/Meta'
    post:
      tags:
      - Package
      summary: Create new package
      operationId: createPackage
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                parentPackageID:
                  type: integer
                packageTypeID:
                  type: integer
                bodyPartID:
                  type: integer
                bodyPartSlug:
                  type: integer
                title:
                  type: string
                description:
                  type: string
                totalNationalValue:
                  type: integer
                employeeID:
                  type: integer
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Package'
                  - $ref: '#/components/schemas/Link'
        '405':
          description: Invalid input
          content: {}
  /package/default:
    get:
      tags:
      - Package
      summary: Get default package
      operationId: getDefaultPackage
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Package'
  /package/search:
    get:
      tags:
      - Package
      summary: Search packages
      operationId: searchPackage
      parameters:
      - name: search
        in: query
        description: Search string
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  Packages:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Package'
                        - $ref: '#/components/schemas/Link'
                  _links:
                    $ref: '#/components/schemas/PageLink'
                  _meta:
                    $ref: '#/components/schemas/Meta'
  /package/{id}:
    get:
      tags:
      - Package
      summary: Get package by ID
      operationId: getPackageByID
      parameters:
      - name: id
        in: path
        description: ID of package
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Package'
                  - $ref: '#/components/schemas/Link'
        '405':
          description: Invalid input
          content: {}
    delete:
      tags:
      - Package
      summary: Delete package by ID
      operationId: deletePackageByID
      parameters:
      - name: id
        in: path
        description: ID of package
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content: {}
        '405':
          description: Invalid input
          content: {}
  /package/{id}/{key}/{value}:
    patch:
      tags:
      - Package
      summary: Update package
      operationId: updatePackage
      parameters:
      - name: id
        in: path
        description: ID of package
        required: true
        schema:
          type: string
      - name: key
        in: path
        description: Property name
        required: true
        schema:
          type: string
      - name: value
        in: path
        description: Property value
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Package'
                  - $ref: '#/components/schemas/Link'
        '405':
          description: Invalid input
          content: {}
  /request:
    get:
      tags:
      - Request
      summary: Get all requests
      operationId: getRequest
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  Requests:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Request'
                        - $ref: '#/components/schemas/Link'
                  _links:
                    $ref: '#/components/schemas/PageLink'
                  _meta:
                    $ref: '#/components/schemas/Meta'
    post:
      tags:
      - Request
      summary: Create new request
      operationId: createRequest
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                discloseExpert:
                  type: boolean
                customHeader:
                  type: string
                notes:
                  type: string
                dueDate:
                  type: string
                promoCode:
                  type: string
                _embedded:
                  type: object
                  properties:
                    Type:
                      $ref: '#/components/schemas/TypeRequest'
                    Status:
                      $ref: '#/components/schemas/Status'
                    Report:
                      $ref: '#/components/schemas/Report'
                    Organization:
                      $ref: '#/components/schemas/Organization'
                    User:
                      $ref: '#/components/schemas/User'
                    Claim:
                      $ref: '#/components/schemas/Claim'
                    Attorney:
                      $ref: '#/components/schemas/Attorney'
                    Contact:
                      $ref: '#/components/schemas/Contact'
                    Patient:
                      $ref: '#/components/schemas/Patient'
                    Packages:
                      type: array
                      items:
                        $ref: '#/components/schemas/RequestPackage'
                    Bills:
                      type: array
                      items:
                        $ref: '#/components/schemas/Bill'
                    Pharmaceuticals:
                      type: array
                      items:
                        $ref: '#/components/schemas/Pharmaceutical'
                    Attachments:
                      type: array
                      items:
                        $ref: '#/components/schemas/Attachment'
                    Documents:
                      type: array
                      items:
                        $ref: '#/components/schemas/Document'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Request'
                  - $ref: '#/components/schemas/Link'
        '405':
          description: Invalid input
          content: {}
  /request/search:
    get:
      tags:
      - Request
      summary: Search requests
      operationId: searchRequest
      parameters:
      - name: search
        in: query
        description: Search string
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  Requests:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Request'
                        - $ref: '#/components/schemas/Link'
                  _links:
                    $ref: '#/components/schemas/PageLink'
                  _meta:
                    $ref: '#/components/schemas/Meta'
  /request/{id}:
    get:
      tags:
      - Request
      summary: Get request by ID
      operationId: getRequestByID
      parameters:
      - name: id
        in: path
        description: ID of request
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Request'
                  - $ref: '#/components/schemas/Link'
  /request/default:
    get:
      tags:
      - Request
      summary: Get default request
      operationId: getDefaultRequest
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
  /request/{id}/{key}/{value}:
    patch:
      tags:
      - Request
      summary: Update request
      operationId: updateRequest
      parameters:
      - name: id
        in: path
        description: ID of request
        required: true
        schema:
          type: string
      - name: key
        in: path
        description: Property name
        required: true
        schema:
          type: string
      - name: value
        in: path
        description: Property value
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Request'
                  - $ref: '#/components/schemas/Link'
        '405':
          description: Invalid input
          content: {}
  /request/attachment/{id}:
    get:
      tags:
      - Request
      summary: Get request attachment by ID
      operationId: getRequestAttachmentByID
      parameters:
      - name: id
        in: path
        description: ID of request attachment
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Attachment'
                  - $ref: '#/components/schemas/Link'
    post:
      tags:
      - Request
      summary: Create new request attachment
      operationId: createRequestAttachment
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                upload:
                  type: string
                  description: file to upload
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Attachment'
                  - $ref: '#/components/schemas/Link'
        '405':
          description: Invalid input
          content: {}
  /request/document/{id}:
    get:
      tags:
      - Request
      summary: Get request document by ID
      operationId: getRequestDocumentByID
      parameters:
      - name: id
        in: path
        description: ID of request document
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Document'
                  - $ref: '#/components/schemas/Link'
  /organization:
    get:
      tags:
      - Organization
      summary: Get all organizations
      operationId: getOrganization
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  Organizations:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Organization'
                        - $ref: '#/components/schemas/Link'
                  _links:
                    $ref: '#/components/schemas/PageLink'
                  _meta:
                    $ref: '#/components/schemas/Meta'
    post:
      tags:
      - Organization
      summary: Create new organization
      operationId: createOrganizations
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                address:
                  type: string
                subPremises:
                  type: string
                city:
                  type: string
                state:
                  type: string
                zip:
                  type: string
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Organization'
                  - $ref: '#/components/schemas/Link'
        '405':
          description: Invalid input
          content: {}
  /organization/default:
    get:
      tags:
      - Organization
      summary: Get default organization
      operationId: getDefaultOrganization
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
  /organization/search:
    get:
      tags:
      - Organization
      summary: Search organizations
      operationId: searchOrganization
      parameters:
      - name: search
        in: query
        description: Search string
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  Organizations:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Organization'
                        - $ref: '#/components/schemas/Link'
                  _links:
                    $ref: '#/components/schemas/PageLink'
                  _meta:
                    $ref: '#/components/schemas/Meta'
  /organization/{id}:
    get:
      tags:
      - Organization
      summary: Get organization by ID
      operationId: getOrganizationByID
      parameters:
      - name: guid
        in: path
        description: ID of organization
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Organization'
                  - $ref: '#/components/schemas/Link'
    delete:
      tags:
      - Organization
      summary: Delete organization by ID
      operationId: deleteOrganizationByID
      parameters:
      - name: guid
        in: path
        description: ID of organization
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content: {}
  /organization/{id}/{key}/{value}:
    patch:
      tags:
      - Organization
      summary: Update organization
      operationId: updateOrganization
      parameters:
      - name: id
        in: path
        description: ID of organization
        required: true
        schema:
          type: string
      - name: key
        in: path
        description: Property name
        required: true
        schema:
          type: string
      - name: value
        in: path
        description: Property value
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Organization'
                  - $ref: '#/components/schemas/Link'
        '405':
          description: Invalid input
          content: {}
  /user:
    get:
      tags:
      - User
      summary: Get all users
      operationId: getUser
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  Users:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/User'
                        - $ref: '#/components/schemas/Link'
                  _links:
                    $ref: '#/components/schemas/PageLink'
                  _meta:
                    $ref: '#/components/schemas/Meta'
    post:
      tags:
      - User
      summary: Create new user
      operationId: createUser
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                lastName:
                  type: string
                firstName:
                  type: string
                email:
                  type: string
                directLine:
                  type: string
                directExtension:
                  type: string
                cellphone:
                  type: string
                other:
                  type: string
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/User'
                  - $ref: '#/components/schemas/Link'
        '405':
          description: Invalid input
          content: {}
  /user/default:
    get:
      tags:
      - User
      summary: Get default user
      operationId: getDefaultUser
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /user/search:
    get:
      tags:
      - User
      summary: Search Users
      operationId: searchUser
      parameters:
      - name: search
        in: query
        description: Search string
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  Users:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/User'
                        - $ref: '#/components/schemas/Link'
                  _links:
                    $ref: '#/components/schemas/PageLink'
                  _meta:
                    $ref: '#/components/schemas/Meta'
  /user/{id}:
    get:
      tags:
      - User
      summary: Get user by ID
      operationId: getUserByID
      parameters:
      - name: id
        in: path
        description: ID of user
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/User'
                  - $ref: '#/components/schemas/Link'
    delete:
      tags:
      - User
      summary: Delete user by ID
      operationId: deleteUserByID
      parameters:
      - name: id
        in: path
        description: ID of user
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content: {}
  /user/{id}/{key}/{value}:
    patch:
      tags:
      - User
      summary: Update user
      operationId: updateUser
      parameters:
      - name: id
        in: path
        description: ID of user
        required: true
        schema:
          type: string
      - name: key
        in: path
        description: Property name
        required: true
        schema:
          type: string
      - name: value
        in: path
        description: Property value
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/User'
                  - $ref: '#/components/schemas/Link'
        '405':
          description: Invalid input
          content: {}
  /patient:
    get:
      tags:
      - Patient
      summary: Get all patients
      operationId: getPatient
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  Patients:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Patient'
                        - $ref: '#/components/schemas/Link'
                  _links:
                    $ref: '#/components/schemas/PageLink'
                  _meta:
                    $ref: '#/components/schemas/Meta'
    post:
      tags:
      - Patient
      summary: Create new patient
      operationId: createPatient
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                middleInitial:
                  type: string
                lastName:
                  type: string
                sex:
                  type: string
                address:
                  type: string
                subPremises:
                  type: string
                city:
                  type: string
                state:
                  type: string
                zip:
                  type: string
                country:
                  type: string
                dateOfBirth:
                  type: string
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Patient'
                  - $ref: '#/components/schemas/Link'
        '405':
          description: Invalid input
          content: {}
  /patient/default:
    get:
      tags:
      - Patient
      summary: Get default patient
      operationId: getDefaultPatient
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
  /patient/search:
    get:
      tags:
      - Patient
      summary: Search Patients
      operationId: searchPatient
      parameters:
      - name: search
        in: query
        description: Search string
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  Patients:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Patient'
                        - $ref: '#/components/schemas/Link'
                  _links:
                    $ref: '#/components/schemas/PageLink'
                  _meta:
                    $ref: '#/components/schemas/Meta'
  /patient/{id}:
    get:
      tags:
      - Patient
      summary: Get patient by ID
      operationId: getPatientByID
      parameters:
      - name: id
        in: path
        description: ID of patient
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Patient'
                  - $ref: '#/components/schemas/Link'
    delete:
      tags:
      - Patient
      summary: Delete patient by ID
      operationId: deletePatientByID
      parameters:
      - name: id
        in: path
        description: ID of patient
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content: {}
  /patient/{id}/{key}/{value}:
    patch:
      tags:
      - Patient
      summary: Update patient
      operationId: updatePatient
      parameters:
      - name: guid
        in: path
        description: GUID of patient
        required: true
        schema:
          type: string
      - name: key
        in: path
        description: Property name
        required: true
        schema:
          type: string
      - name: value
        in: path
        description: Property value
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Patient'
                  - $ref: '#/components/schemas/Link'
        '405':
          description: Invalid input
          content: {}
components:
  schemas:
    Package:
      type: object
      properties:
        packageID:
          type: integer
        parentPackageID:
          type: integer
        packageTypeID:
          type: integer
        bodyPartID:
          type: integer
        bodyPartSlug:
          type: integer
        title:
          type: string
        description:
          type: string
        totalNationalValue:
          type: integer
        employeeID:
          type: integer
        isPublished:
          type: integer
        isStackable:
          type: integer
        isWorkersCompensation:
          type: integer
        isPersonalInjury:
          type: integer
        isFlaggedForReview:
          type: integer
        isExpress:
          type: integer
        isDeleted:
          type: integer
        _created:
          type: string
        _updated:
          type: string
    Request:
      type: object
      properties:
        requestID:
          type: integer
        requestGUID:
          type: integer
        discloseExpert:
          type: boolean
        customHeader:
          type: string
        notes:
          type: string
        dueDate:
          type: string
        promoCode:
          type: string
        created:
          type: string
        lastUpdated:
          type: string
        isDownloaded:
          type: integer
        _embedded:
          type: object
          properties:
            Type:
              $ref: '#/components/schemas/TypeRequest'
            Status:
              $ref: '#/components/schemas/Status'
            Report:
              $ref: '#/components/schemas/Report'
            Organization:
              allOf:
                - $ref: '#/components/schemas/Organization'
                - $ref: '#/components/schemas/Link'
            User:
              allOf:
                - $ref: '#/components/schemas/User'
                - $ref: '#/components/schemas/Link'
            Claim:
              $ref: '#/components/schemas/Claim'
            Attorney:
              $ref: '#/components/schemas/Attorney'
            Contact:
              $ref: '#/components/schemas/Contact'
            Patient:
              allOf:
                - $ref: '#/components/schemas/Patient'
                - $ref: '#/components/schemas/Link'
            Packages:
              type: array
              items:
                $ref: '#/components/schemas/RequestPackage'
            Bills:
              type: array
              items:
                $ref: '#/components/schemas/Bill'
            Pharmaceuticals:
              type: array
              items:
                $ref: '#/components/schemas/Pharmaceutical'
            Attachments:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/Attachment'
                  - $ref: '#/components/schemas/Link'
            Documents:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/Document'
                  - $ref: '#/components/schemas/Link'
    TypeRequest:
      type: object
      properties:
        slug:
          type: string
        type:
          type: string
    TypeClaim:
      type: object
      properties:
        slug:
          type: string
        type:
          type: string
    TypeDocument:
      type: object
      properties:
        slug:
          type: string
        type:
          type: string
    Status:
      type: object
      properties:
        slug:
          type: string
        status:
          type: string
    Report:
      type: object
      properties:
        slug:
          type: string
        type:
          type: string
    Organization:
      type: object
      properties:
        organizationID:
          type: string
        organizationGUID:
          type: string
        name:
          type: string
        fullAddress:
          type: string
        address:
          type: string
        subPremises:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
    User:
      type: object
      properties:
        userID:
          type: string
        userGUID:
          type: string
        name:
          type: string
        lastName:
          type: string
        firstName:
          type: string
        email:
          type: string
        phone:
          type: string
        directLine:
          type: string
        directExtension:
          type: string
        cellphone:
          type: string
        other:
          type: string
    Claim:
      type: object
      properties:
        reference:
          type: string
        caseNumber:
          type: string
        dateOfLoss:
          type: string
        dateOfDiscovery:
          type: string
        dateOfTrial:
          type: string
        _embedded:
          type: object
          properties:
            type:
              $ref: '#/components/schemas/TypeClaim'
    Attorney:
      type: array
      items:
        type: string
    Contact:
      type: object
      properties:
        contactID:
          type: string
        contactGUID:
          type: string
        name:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
        directLine:
          type: string
        directExtension:
          type: string
        cellphone:
          type: string
        fax:
          type: string
    Patient:
      type: object
      properties:
        patientID:
          type: string
        patientGUID:
          type: string
        name:
          type: string
        firstName:
          type: string
        middleInitial:
          type: string
        lastName:
          type: string
        sex:
          type: string
        fullAddress:
          type: string
        address:
          type: string
        subPremises:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        country:
          type: string
        latitude:
          type: number
        longitude:
          type: number
        dateOfBirth:
          type: string
    RequestPackage:
      type: object
      properties:
        packageID:
          type: integer
        packageGUID:
          type: string
        link:
          type: integer
        title:
          type: string
        description:
          type: string
        quantity:
          type: number
        frequencyMultiplier:
          type: number
        frequency:
          type: integer
        duration:
          type: number
        period:
          type: number
        multiplier:
          type: number
        multiplierText:
          type: string
    Bill:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        quantity:
          type: integer
        packageID:
          type: integer
        linkToPackage:
          type: integer
        isIncluded:
          type: integer
        source:
          type: string
    Pharmaceutical:
      type: object
      properties:
        requestPharmaceuticalID:
          type: integer
        requestID:
          type: integer
        pharmaceuticalGUID:
          type: string
        quantity:
          type: number
        duration:
          type: number
        frequency:
          type: number
        period:
          type: number
    Attachment:
      type: object
      properties:
        requestAttachmentID:
          type: integer
        requestID:
          type: integer
        type:
          type: string
        name:
          type: string
        link:
          type: string
        description:
          type: string
    Document:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        link:
          type: string
        date:
          type: string
        mimeType:
          type: string
        _embedded:
          type: object
          properties:
            type:
              $ref: '#/components/schemas/TypeDocument'
    Link:
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
    PageLink:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
        first:
          type: object
          properties:
            href:
              type: string
        prev:
          type: object
          properties:
            href:
              type: string
        next:
          type: object
          properties:
            href:
              type: string
        last:
          type: object
          properties:
            href:
              type: string
    Meta:
      type: object
      properties:
        totalCount:
          type: integer
        pageCount:
          type: integer
        currentPage:
          type: integer
        perPage:
          type: integer
